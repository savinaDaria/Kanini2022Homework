namespace CustomerManagementSystem
{
    //1) Create a customer class
    //Id, Name, Age, Phone
    class Customer
    {
        int id, age;
        public int Id { get { return id; } set { id = value; } }
        public string Name { get; set; }
        public int Age { get { return age; } set { age = value; } }
        public string Phone { get; set; }
        public Customer()
        {
            Id = 0;
            Name = "Unknown";
            Age = 0;
            Phone = "";
        }

        public override string ToString()
        {
            return "\n==============Customer Details==============\n" +
              "\nCustomer Id: " + Id +
              "\nCustomer Name: " + Name+
              "\nCustomer Age: " + Age+
              "\nCustomer Phone: " + Phone+ "\n";
        }
    }
}
namespace CustomerManagementSystem
{
   // 2) Create a ManageCustomer class
   //Add Customer - Create - should add 3 customers
   //Print all customers - Read
   //Print Customer if given the ID - Read
   //Change Customer Phone - Update
   //Edit Customer Age - Update
    class ManageCustomer
    {
        public static int customer_count = 3;
        Customer[] customers = new Customer[customer_count];
        public ManageCustomer(int CustomerCount)
        {
            customer_count = CustomerCount;
        }
        public void CreateCustomer() //create
        {
            while (customer_count > 0)
            {
                Customer customer = new Customer();
                int id, age;
                Console.WriteLine("=========================Enter start=========================");
                customer.Id = 100+ customer_count - 1;
                Console.WriteLine("Please enter Customer Name:");
                customer.Name = Console.ReadLine();
                Console.WriteLine("Please enter Customer Age(>0): ");
                while (!Int32.TryParse(Console.ReadLine(), out age) || age <= 0)
                {
                    Console.WriteLine("Invalid entry for age. Try again");

                }
                customer.Age = age;
                Console.WriteLine("Please enter Customer Phone:");
                customer.Phone = Console.ReadLine();
                Console.WriteLine("=========================Enter end=========================");
                customers[customer_count - 1] = customer;
                customer_count--;
            }
        }
        public void GetCustomersInformation() //read
        {
            foreach(var customer in customers)
            {
                if(customer!=null)Console.WriteLine(customer);
            }
        }
        public Customer GetCustomerById(int CustomerId) //read
        {
            foreach (var customer in customers)
            {
                if (customer!= null && customer.Id == CustomerId) return customer;
            }
            Console.WriteLine("Can`t find customer by this id.");
            return null;
        }
        public bool UpdateCustomerPhone() //update
        {
            int CustomerId= GetCustomerIdFromConsole();
            Customer customer = GetCustomerById(CustomerId);
            if (customer!=null) 
            {
                Console.WriteLine("Please enter new value for Phone: ");
                string phone = Console.ReadLine();
                customer.Phone= phone;
                return true;
            }
            else
            {
                return false;
            }
        }
        public bool UpdateCustomerAge() //update
        {
            int CustomerId = GetCustomerIdFromConsole();
            Customer customer = GetCustomerById(CustomerId);
            if (customer != null)
            {                
                int AgeUpdated;
                do
                {
                    Console.WriteLine("Please enter new value for Age: ");
                    
                } while (!Int32.TryParse(Console.ReadLine(), out AgeUpdated));
                customer.Age = AgeUpdated;
                return true;                
            }
            else
            {
                return false;
            }
        }
        public int GetCustomerIdFromConsole()
        {
            Console.WriteLine("Please, enter Customer Id: ");
            int CustomerId;
            while(!Int32.TryParse(Console.ReadLine(), out CustomerId))
            {
                Console.WriteLine("Invalid customer id.Try again");
            }
            return CustomerId;
        }
    }
}

namespace CustomerManagementSystem
{
    class Program
    {
        //3) Create method in program class that will print  menu
        //Welcome to customer Management system(hint- use a switch case inside a do-while)
        //1) Add customers
        //2) Print customer
        //3) Print all customers
        //4) Update customer phone
        //5) Update customer age'
        //6) Exit
        //and will call the respective methods in the Manage Customer class
        void CustomerManagementSystemMenu()
        {
            int choice = 0;
            ManageCustomer manageCustomer = new ManageCustomer(3);
            Console.WriteLine("Welcome to Customer Management System Menu!\n" +                                   
                                   "1) Add customers\n" +
                                   "2) Print customer\n" +
                                   "3) Print all customers\n" +
                                   "4) Update customer phone\n" +
                                   "5) Update customer age\n" +
                                   "6) Exit");
            do
            {
                Console.WriteLine("\nPlease,choose one option: ");
                Int32.TryParse(Console.ReadLine(), out choice);
                switch (choice)
                {
                    case 1:
                        manageCustomer.CreateCustomer();
                        break;
                    case 2:
                        Customer customer =manageCustomer.GetCustomerById(manageCustomer.GetCustomerIdFromConsole());
                        if (customer != null) Console.WriteLine(customer); 
                        break;
                    case 3:
                        manageCustomer.GetCustomersInformation();
                        break;
                    case 4:
                        
                        if(manageCustomer.UpdateCustomerPhone())
                            Console.WriteLine("Successfully updated");                                                
                        break;
                    case 5:                        
                       if (manageCustomer.UpdateCustomerAge())
                                Console.WriteLine("Successfully updated");                         
                        break;
                    case 6:
                        Console.WriteLine("~~~~~~~~~~~~Menu Exit~~~~~~~~~~~~");
                        break;
                    default:
                        Console.WriteLine("Invalid option number. Try again");
                        break;
                }
            } while (choice!=6);
        }
        static void Main(string[] args)
        {
            Program program = new Program();
            program.CustomerManagementSystemMenu();
        }
    }
}